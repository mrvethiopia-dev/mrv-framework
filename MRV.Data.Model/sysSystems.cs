//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace MRV.Data.Model
{
    public partial class sysSystems
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Code
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<sysMenus> sysMenus
        {
            get
            {
                if (_sysMenus == null)
                {
                    var newCollection = new FixupCollection<sysMenus>();
                    newCollection.CollectionChanged += FixupsysMenus;
                    _sysMenus = newCollection;
                }
                return _sysMenus;
            }
            set
            {
                if (!ReferenceEquals(_sysMenus, value))
                {
                    var previousValue = _sysMenus as FixupCollection<sysMenus>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupsysMenus;
                    }
                    _sysMenus = value;
                    var newValue = value as FixupCollection<sysMenus>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupsysMenus;
                    }
                }
            }
        }
        private ICollection<sysMenus> _sysMenus;
    
        public virtual ICollection<sysUserSystems> sysUserSystems
        {
            get
            {
                if (_sysUserSystems == null)
                {
                    var newCollection = new FixupCollection<sysUserSystems>();
                    newCollection.CollectionChanged += FixupsysUserSystems;
                    _sysUserSystems = newCollection;
                }
                return _sysUserSystems;
            }
            set
            {
                if (!ReferenceEquals(_sysUserSystems, value))
                {
                    var previousValue = _sysUserSystems as FixupCollection<sysUserSystems>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupsysUserSystems;
                    }
                    _sysUserSystems = value;
                    var newValue = value as FixupCollection<sysUserSystems>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupsysUserSystems;
                    }
                }
            }
        }
        private ICollection<sysUserSystems> _sysUserSystems;

        #endregion

        #region Association Fixup
    
        private void FixupsysMenus(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (sysMenus item in e.NewItems)
                {
                    item.sysSystems = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (sysMenus item in e.OldItems)
                {
                    if (ReferenceEquals(item.sysSystems, this))
                    {
                        item.sysSystems = null;
                    }
                }
            }
        }
    
        private void FixupsysUserSystems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (sysUserSystems item in e.NewItems)
                {
                    item.sysSystems = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (sysUserSystems item in e.OldItems)
                {
                    if (ReferenceEquals(item.sysSystems, this))
                    {
                        item.sysSystems = null;
                    }
                }
            }
        }

        #endregion

    }
}
