//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace MRV.Data.Model
{
    public partial class sysSubMenu
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int MenuId
        {
            get { return _menuId; }
            set
            {
                if (_menuId != value)
                {
                    if (sysMenus != null && sysMenus.Id != value)
                    {
                        sysMenus = null;
                    }
                    _menuId = value;
                }
            }
        }
        private int _menuId;
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Code
        {
            get;
            set;
        }
    
        public virtual string Href
        {
            get;
            set;
        }
    
        public virtual string IconCls
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual sysMenus sysMenus
        {
            get { return _sysMenus; }
            set
            {
                if (!ReferenceEquals(_sysMenus, value))
                {
                    var previousValue = _sysMenus;
                    _sysMenus = value;
                    FixupsysMenus(previousValue);
                }
            }
        }
        private sysMenus _sysMenus;
    
        public virtual ICollection<sysRolePermission> sysRolePermission
        {
            get
            {
                if (_sysRolePermission == null)
                {
                    var newCollection = new FixupCollection<sysRolePermission>();
                    newCollection.CollectionChanged += FixupsysRolePermission;
                    _sysRolePermission = newCollection;
                }
                return _sysRolePermission;
            }
            set
            {
                if (!ReferenceEquals(_sysRolePermission, value))
                {
                    var previousValue = _sysRolePermission as FixupCollection<sysRolePermission>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupsysRolePermission;
                    }
                    _sysRolePermission = value;
                    var newValue = value as FixupCollection<sysRolePermission>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupsysRolePermission;
                    }
                }
            }
        }
        private ICollection<sysRolePermission> _sysRolePermission;

        #endregion

        #region Association Fixup
    
        private void FixupsysMenus(sysMenus previousValue)
        {
            if (previousValue != null && previousValue.sysSubMenu.Contains(this))
            {
                previousValue.sysSubMenu.Remove(this);
            }
    
            if (sysMenus != null)
            {
                if (!sysMenus.sysSubMenu.Contains(this))
                {
                    sysMenus.sysSubMenu.Add(this);
                }
                if (MenuId != sysMenus.Id)
                {
                    MenuId = sysMenus.Id;
                }
            }
        }
    
        private void FixupsysRolePermission(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (sysRolePermission item in e.NewItems)
                {
                    item.sysSubMenu = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (sysRolePermission item in e.OldItems)
                {
                    if (ReferenceEquals(item.sysSubMenu, this))
                    {
                        item.sysSubMenu = null;
                    }
                }
            }
        }

        #endregion

    }
}
