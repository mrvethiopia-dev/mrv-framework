//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace MRV.Data.Model
{
    public partial class sysUser
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Username
        {
            get;
            set;
        }
    
        public virtual string Password
        {
            get;
            set;
        }
    
        public virtual string FullName
        {
            get;
            set;
        }
    
        public virtual string IdentityNo
        {
            get;
            set;
        }
    
        public virtual bool IsActive
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> IsDeleted
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<GHGDataEntryHeader> GHGDataEntryHeader
        {
            get
            {
                if (_gHGDataEntryHeader == null)
                {
                    var newCollection = new FixupCollection<GHGDataEntryHeader>();
                    newCollection.CollectionChanged += FixupGHGDataEntryHeader;
                    _gHGDataEntryHeader = newCollection;
                }
                return _gHGDataEntryHeader;
            }
            set
            {
                if (!ReferenceEquals(_gHGDataEntryHeader, value))
                {
                    var previousValue = _gHGDataEntryHeader as FixupCollection<GHGDataEntryHeader>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGHGDataEntryHeader;
                    }
                    _gHGDataEntryHeader = value;
                    var newValue = value as FixupCollection<GHGDataEntryHeader>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGHGDataEntryHeader;
                    }
                }
            }
        }
        private ICollection<GHGDataEntryHeader> _gHGDataEntryHeader;
    
        public virtual ICollection<GHGDataEntryHeader> GHGDataEntryHeader1
        {
            get
            {
                if (_gHGDataEntryHeader1 == null)
                {
                    var newCollection = new FixupCollection<GHGDataEntryHeader>();
                    newCollection.CollectionChanged += FixupGHGDataEntryHeader1;
                    _gHGDataEntryHeader1 = newCollection;
                }
                return _gHGDataEntryHeader1;
            }
            set
            {
                if (!ReferenceEquals(_gHGDataEntryHeader1, value))
                {
                    var previousValue = _gHGDataEntryHeader1 as FixupCollection<GHGDataEntryHeader>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGHGDataEntryHeader1;
                    }
                    _gHGDataEntryHeader1 = value;
                    var newValue = value as FixupCollection<GHGDataEntryHeader>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGHGDataEntryHeader1;
                    }
                }
            }
        }
        private ICollection<GHGDataEntryHeader> _gHGDataEntryHeader1;
    
        public virtual ICollection<sysUserRole> sysUserRole
        {
            get
            {
                if (_sysUserRole == null)
                {
                    var newCollection = new FixupCollection<sysUserRole>();
                    newCollection.CollectionChanged += FixupsysUserRole;
                    _sysUserRole = newCollection;
                }
                return _sysUserRole;
            }
            set
            {
                if (!ReferenceEquals(_sysUserRole, value))
                {
                    var previousValue = _sysUserRole as FixupCollection<sysUserRole>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupsysUserRole;
                    }
                    _sysUserRole = value;
                    var newValue = value as FixupCollection<sysUserRole>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupsysUserRole;
                    }
                }
            }
        }
        private ICollection<sysUserRole> _sysUserRole;
    
        public virtual ICollection<sysUserSystems> sysUserSystems
        {
            get
            {
                if (_sysUserSystems == null)
                {
                    var newCollection = new FixupCollection<sysUserSystems>();
                    newCollection.CollectionChanged += FixupsysUserSystems;
                    _sysUserSystems = newCollection;
                }
                return _sysUserSystems;
            }
            set
            {
                if (!ReferenceEquals(_sysUserSystems, value))
                {
                    var previousValue = _sysUserSystems as FixupCollection<sysUserSystems>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupsysUserSystems;
                    }
                    _sysUserSystems = value;
                    var newValue = value as FixupCollection<sysUserSystems>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupsysUserSystems;
                    }
                }
            }
        }
        private ICollection<sysUserSystems> _sysUserSystems;

        #endregion

        #region Association Fixup
    
        private void FixupGHGDataEntryHeader(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GHGDataEntryHeader item in e.NewItems)
                {
                    item.sysUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GHGDataEntryHeader item in e.OldItems)
                {
                    if (ReferenceEquals(item.sysUser, this))
                    {
                        item.sysUser = null;
                    }
                }
            }
        }
    
        private void FixupGHGDataEntryHeader1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GHGDataEntryHeader item in e.NewItems)
                {
                    item.sysUser1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GHGDataEntryHeader item in e.OldItems)
                {
                    if (ReferenceEquals(item.sysUser1, this))
                    {
                        item.sysUser1 = null;
                    }
                }
            }
        }
    
        private void FixupsysUserRole(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (sysUserRole item in e.NewItems)
                {
                    item.sysUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (sysUserRole item in e.OldItems)
                {
                    if (ReferenceEquals(item.sysUser, this))
                    {
                        item.sysUser = null;
                    }
                }
            }
        }
    
        private void FixupsysUserSystems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (sysUserSystems item in e.NewItems)
                {
                    item.sysUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (sysUserSystems item in e.OldItems)
                {
                    if (ReferenceEquals(item.sysUser, this))
                    {
                        item.sysUser = null;
                    }
                }
            }
        }

        #endregion

    }
}
