//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace MRV.Data.Model
{
    public partial class sysRolePermission
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int RoleId
        {
            get { return _roleId; }
            set
            {
                if (_roleId != value)
                {
                    if (sysRole != null && sysRole.Id != value)
                    {
                        sysRole = null;
                    }
                    _roleId = value;
                }
            }
        }
        private int _roleId;
    
        public virtual int SubMenuId
        {
            get { return _subMenuId; }
            set
            {
                if (_subMenuId != value)
                {
                    if (sysSubMenu != null && sysSubMenu.Id != value)
                    {
                        sysSubMenu = null;
                    }
                    _subMenuId = value;
                }
            }
        }
        private int _subMenuId;
    
        public virtual bool CanAdd
        {
            get;
            set;
        }
    
        public virtual bool CanEdit
        {
            get;
            set;
        }
    
        public virtual bool CanDelete
        {
            get;
            set;
        }
    
        public virtual bool CanView
        {
            get;
            set;
        }
    
        public virtual bool CanApprove
        {
            get;
            set;
        }
    
        public virtual bool CanCheck
        {
            get;
            set;
        }
    
        public virtual bool CanAuthorize
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual sysRole sysRole
        {
            get { return _sysRole; }
            set
            {
                if (!ReferenceEquals(_sysRole, value))
                {
                    var previousValue = _sysRole;
                    _sysRole = value;
                    FixupsysRole(previousValue);
                }
            }
        }
        private sysRole _sysRole;
    
        public virtual sysSubMenu sysSubMenu
        {
            get { return _sysSubMenu; }
            set
            {
                if (!ReferenceEquals(_sysSubMenu, value))
                {
                    var previousValue = _sysSubMenu;
                    _sysSubMenu = value;
                    FixupsysSubMenu(previousValue);
                }
            }
        }
        private sysSubMenu _sysSubMenu;

        #endregion

        #region Association Fixup
    
        private void FixupsysRole(sysRole previousValue)
        {
            if (previousValue != null && previousValue.sysRolePermission.Contains(this))
            {
                previousValue.sysRolePermission.Remove(this);
            }
    
            if (sysRole != null)
            {
                if (!sysRole.sysRolePermission.Contains(this))
                {
                    sysRole.sysRolePermission.Add(this);
                }
                if (RoleId != sysRole.Id)
                {
                    RoleId = sysRole.Id;
                }
            }
        }
    
        private void FixupsysSubMenu(sysSubMenu previousValue)
        {
            if (previousValue != null && previousValue.sysRolePermission.Contains(this))
            {
                previousValue.sysRolePermission.Remove(this);
            }
    
            if (sysSubMenu != null)
            {
                if (!sysSubMenu.sysRolePermission.Contains(this))
                {
                    sysSubMenu.sysRolePermission.Add(this);
                }
                if (SubMenuId != sysSubMenu.Id)
                {
                    SubMenuId = sysSubMenu.Id;
                }
            }
        }

        #endregion

    }
}
